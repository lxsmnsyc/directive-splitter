// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`FunctionDeclaration > client > should skip non-async server functions 1`] = `
{
  "code": "function example() {
  'use server';

  return 'foo bar';
}",
  "entries": [],
  "files": Map {},
  "map": {
    "file": undefined,
    "mappings": "AACM,SAASA,OAAOA,CAAA,EAAG;EACjB,YAAY;;EACZ,OAAO,SAAS;AAClB",
    "names": [
      "example",
    ],
    "sourceRoot": undefined,
    "sources": [
      "/path/to/example.ts",
    ],
    "sourcesContent": [
      "
      function example() {
        'use server';
        return 'foo bar';
      }
      ",
    ],
    "version": 3,
  },
  "roots": [],
}
`;

exports[`FunctionDeclaration > client > should skip top-level values for scope 1`] = `
{
  "code": "import { $$func as $$func_1 } from "my-example/runtime";
import { value } from "./example.ts?mode=client&my-example=0.ts";
const outer = () => {
  async function example() {
    const [type_1, result_1] = await $$func_1((await import("./example.ts?mode=client&my-example=1.ts")).default, null)();
    if (type_1 === 2) {
      return result_1;
    }
  }
};",
  "entries": [
    "/path/to/example.ts?mode=client&my-example=1.ts",
  ],
  "files": Map {
    "/path/to/example.ts?mode=client&my-example=0.ts" => {
      "code": "export const value = 'foo bar';",
      "map": {
        "file": undefined,
        "mappings": "aACYA,KAAK,GAAG,SAAS",
        "names": [
          "value",
        ],
        "sourceRoot": undefined,
        "sources": [
          "/path/to/example.ts",
        ],
        "sourcesContent": [
          null,
        ],
        "version": 3,
      },
    },
    "/path/to/example.ts?mode=client&my-example=1.ts" => {
      "code": "import { server as entry_1 } from "my-example/client";
export default entry_1("26ecc3a5-0-example");",
      "map": {
        "file": undefined,
        "mappings": "",
        "names": [],
        "sourceRoot": undefined,
        "sources": [],
        "sourcesContent": [],
        "version": 3,
      },
    },
  },
  "map": {
    "file": undefined,
    "mappings": ";;AAEM,MAAMA,KAAK,GAAGA,CAAA,KAAM;EAClB,eAAeC,OAAOA,CAAA;IAAA,OAAAC,MAAA,EAAAC,QAAA,UAAAC,QAAA,4DAAAC,OAAA;IAAA,IAAAH,MAAA;MAAA,OAAAC,QAAA;IAAA;EAAA;AAIxB,CAAC",
    "names": [
      "outer",
      "example",
      "type_1",
      "result_1",
      "$$func_1",
      "default",
    ],
    "sourceRoot": undefined,
    "sources": [
      "/path/to/example.ts",
    ],
    "sourcesContent": [
      "
      const value = 'foo bar';
      const outer = () => {
        async function example() {
          'use server';
          return value;
        }
      }
      ",
    ],
    "version": 3,
  },
  "roots": [],
}
`;

exports[`FunctionDeclaration > client > should transform valid server functions 1`] = `
{
  "code": "import { $$func as $$func_1 } from "my-example/runtime";
async function example() {
  const [type_1, result_1] = await $$func_1((await import("./example.ts?mode=client&my-example=0.ts")).default, null)();
  if (type_1 === 2) {
    return result_1;
  }
}",
  "entries": [
    "/path/to/example.ts?mode=client&my-example=0.ts",
  ],
  "files": Map {
    "/path/to/example.ts?mode=client&my-example=0.ts" => {
      "code": "import { server as entry_1 } from "my-example/client";
export default entry_1("26ecc3a5-0-example");",
      "map": {
        "file": undefined,
        "mappings": "",
        "names": [],
        "sourceRoot": undefined,
        "sources": [],
        "sourcesContent": [],
        "version": 3,
      },
    },
  },
  "map": {
    "file": undefined,
    "mappings": ";AACM,eAAeA,OAAOA,CAAA;EAAA,OAAAC,MAAA,EAAAC,QAAA,UAAAC,QAAA,4DAAAC,OAAA;EAAA,IAAAH,MAAA;IAAA,OAAAC,QAAA;EAAA;AAAA",
    "names": [
      "example",
      "type_1",
      "result_1",
      "$$func_1",
      "default",
    ],
    "sourceRoot": undefined,
    "sources": [
      "/path/to/example.ts",
    ],
    "sourcesContent": [
      "
      async function example() {
        'use server';
        return 'foo bar';
      }
      ",
    ],
    "version": 3,
  },
  "roots": [],
}
`;

exports[`FunctionDeclaration > client > should transform valid server functions with scope 1`] = `
{
  "code": "import { $$func as $$func_1 } from "my-example/runtime";
const outer = () => {
  const value = 'foo bar';
  async function example() {
    const [type_1, result_1] = await $$func_1((await import("./example.ts?mode=client&my-example=0.ts")).default, null)(value);
    if (type_1 === 2) {
      return result_1;
    }
  }
};",
  "entries": [
    "/path/to/example.ts?mode=client&my-example=0.ts",
  ],
  "files": Map {
    "/path/to/example.ts?mode=client&my-example=0.ts" => {
      "code": "import { server as entry_1 } from "my-example/client";
export default entry_1("26ecc3a5-0-example");",
      "map": {
        "file": undefined,
        "mappings": "",
        "names": [],
        "sourceRoot": undefined,
        "sources": [],
        "sourcesContent": [],
        "version": 3,
      },
    },
  },
  "map": {
    "file": undefined,
    "mappings": ";AACM,MAAMA,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,KAAK,GAAG,SAAS;EACvB,eAAeC,OAAOA,CAAA;IAAA,OAAAC,MAAA,EAAAC,QAAA,UAAAC,QAAA,4DAAAC,OAAA,QADhBL,KAAK;IAAA,IAAAE,MAAA;MAAA,OAAAC,QAAA;IAAA;EAAA;AAKb,CAAC",
    "names": [
      "outer",
      "value",
      "example",
      "type_1",
      "result_1",
      "$$func_1",
      "default",
    ],
    "sourceRoot": undefined,
    "sources": [
      "/path/to/example.ts",
    ],
    "sourcesContent": [
      "
      const outer = () => {
        const value = 'foo bar';
        async function example() {
          'use server';
          return value;
        }
      }
      ",
    ],
    "version": 3,
  },
  "roots": [],
}
`;

exports[`FunctionDeclaration > server > should skip non-async server functions 1`] = `
{
  "code": "function example() {
  'use server';

  return 'foo bar';
}",
  "entries": [],
  "files": Map {},
  "map": {
    "file": undefined,
    "mappings": "AACM,SAASA,OAAOA,CAAA,EAAG;EACjB,YAAY;;EACZ,OAAO,SAAS;AAClB",
    "names": [
      "example",
    ],
    "sourceRoot": undefined,
    "sources": [
      "/path/to/example.ts",
    ],
    "sourcesContent": [
      "
      function example() {
        'use server';
        return 'foo bar';
      }
      ",
    ],
    "version": 3,
  },
  "roots": [],
}
`;

exports[`FunctionDeclaration > server > should skip top-level values for scope 1`] = `
{
  "code": "import { $$func as $$func_1 } from "my-example/runtime";
import { value } from "./example.ts?mode=server&my-example=0.ts";
const outer = () => {
  async function example() {
    const [type_1, result_1] = await $$func_1((await import("./example.ts?mode=server&my-example=2.ts")).default, null)();
    if (type_1 === 2) {
      return result_1;
    }
  }
};",
  "entries": [
    "/path/to/example.ts?mode=server&my-example=2.ts",
  ],
  "files": Map {
    "/path/to/example.ts?mode=server&my-example=0.ts" => {
      "code": "export const value = 'foo bar';",
      "map": {
        "file": undefined,
        "mappings": "aACYA,KAAK,GAAG,SAAS",
        "names": [
          "value",
        ],
        "sourceRoot": undefined,
        "sources": [
          "/path/to/example.ts",
        ],
        "sourcesContent": [
          null,
        ],
        "version": 3,
      },
    },
    "/path/to/example.ts?mode=server&my-example=1.ts" => {
      "code": "import { value } from "./example.ts?mode=server&my-example=0.ts";
export default (async function () {
  try {
    return [2, value, null];
  } catch (error_1) {
    return [4, error_1];
  }
  return [3];
});",
      "map": {
        "file": undefined,
        "mappings": ";;;IAKU,WAAOA,KAAK;EAAC,SAAAC,OAAA;IAAA,WAAAA,OAAA;EAAA;EAAA;AAAA",
        "names": [
          "value",
          "error_1",
        ],
        "sourceRoot": undefined,
        "sources": [
          "/path/to/example.ts",
        ],
        "sourcesContent": [
          null,
        ],
        "version": 3,
      },
    },
    "/path/to/example.ts?mode=server&my-example=2.ts" => {
      "code": "import { server as entry_1 } from "my-example/server";
import root_1 from "./example.ts?mode=server&my-example=1.ts";
export default entry_1("26ecc3a5-0-example", root_1);",
      "map": {
        "file": undefined,
        "mappings": "",
        "names": [],
        "sourceRoot": undefined,
        "sources": [],
        "sourcesContent": [],
        "version": 3,
      },
    },
  },
  "map": {
    "file": undefined,
    "mappings": ";;AAEM,MAAMA,KAAK,GAAGA,CAAA,KAAM;EAClB,eAAeC,OAAOA,CAAA;IAAA,OAAAC,MAAA,EAAAC,QAAA,UAAAC,QAAA,4DAAAC,OAAA;IAAA,IAAAH,MAAA;MAAA,OAAAC,QAAA;IAAA;EAAA;AAIxB,CAAC",
    "names": [
      "outer",
      "example",
      "type_1",
      "result_1",
      "$$func_1",
      "default",
    ],
    "sourceRoot": undefined,
    "sources": [
      "/path/to/example.ts",
    ],
    "sourcesContent": [
      "
      const value = 'foo bar';
      const outer = () => {
        async function example() {
          'use server';
          return value;
        }
      }
      ",
    ],
    "version": 3,
  },
  "roots": [
    "/path/to/example.ts?mode=server&my-example=1.ts",
  ],
}
`;

exports[`FunctionDeclaration > server > should transform valid server functions 1`] = `
{
  "code": "import { $$func as $$func_1 } from "my-example/runtime";
async function example() {
  const [type_1, result_1] = await $$func_1((await import("./example.ts?mode=server&my-example=1.ts")).default, null)();
  if (type_1 === 2) {
    return result_1;
  }
}",
  "entries": [
    "/path/to/example.ts?mode=server&my-example=1.ts",
  ],
  "files": Map {
    "/path/to/example.ts?mode=server&my-example=0.ts" => {
      "code": "export default (async function () {
  try {
    return [2, 'foo bar', null];
  } catch (error_1) {
    return [4, error_1];
  }
  return [3];
});",
      "map": {
        "file": undefined,
        "mappings": ";;IAGQ,WAAO,SAAS;EAAC,SAAAA,OAAA;IAAA,WAAAA,OAAA;EAAA;EAAA;AAAA",
        "names": [
          "error_1",
        ],
        "sourceRoot": undefined,
        "sources": [
          "/path/to/example.ts",
        ],
        "sourcesContent": [
          null,
        ],
        "version": 3,
      },
    },
    "/path/to/example.ts?mode=server&my-example=1.ts" => {
      "code": "import { server as entry_1 } from "my-example/server";
import root_1 from "./example.ts?mode=server&my-example=0.ts";
export default entry_1("26ecc3a5-0-example", root_1);",
      "map": {
        "file": undefined,
        "mappings": "",
        "names": [],
        "sourceRoot": undefined,
        "sources": [],
        "sourcesContent": [],
        "version": 3,
      },
    },
  },
  "map": {
    "file": undefined,
    "mappings": ";AACM,eAAeA,OAAOA,CAAA;EAAA,OAAAC,MAAA,EAAAC,QAAA,UAAAC,QAAA,4DAAAC,OAAA;EAAA,IAAAH,MAAA;IAAA,OAAAC,QAAA;EAAA;AAAA",
    "names": [
      "example",
      "type_1",
      "result_1",
      "$$func_1",
      "default",
    ],
    "sourceRoot": undefined,
    "sources": [
      "/path/to/example.ts",
    ],
    "sourcesContent": [
      "
      async function example() {
        'use server';
        return 'foo bar';
      }
      ",
    ],
    "version": 3,
  },
  "roots": [
    "/path/to/example.ts?mode=server&my-example=0.ts",
  ],
}
`;

exports[`FunctionDeclaration > server > should transform valid server functions with scope 1`] = `
{
  "code": "import { $$func as $$func_1 } from "my-example/runtime";
const outer = () => {
  const value = 'foo bar';
  async function example() {
    const [type_1, result_1] = await $$func_1((await import("./example.ts?mode=server&my-example=1.ts")).default, null)(value);
    if (type_1 === 2) {
      return result_1;
    }
  }
};",
  "entries": [
    "/path/to/example.ts?mode=server&my-example=1.ts",
  ],
  "files": Map {
    "/path/to/example.ts?mode=server&my-example=0.ts" => {
      "code": "export default (async function (value) {
  try {
    return [2, value, null];
  } catch (error_1) {
    return [4, error_1];
  }
  return [3];
});",
      "map": {
        "file": undefined,
        "mappings": "gCAEcA,KAAK;EAAA;IAGT,WAAOA,KAAK;EAAC,SAAAC,OAAA;IAAA,WAAAA,OAAA;EAAA;EAAA;AAAA",
        "names": [
          "value",
          "error_1",
        ],
        "sourceRoot": undefined,
        "sources": [
          "/path/to/example.ts",
        ],
        "sourcesContent": [
          null,
        ],
        "version": 3,
      },
    },
    "/path/to/example.ts?mode=server&my-example=1.ts" => {
      "code": "import { server as entry_1 } from "my-example/server";
import root_1 from "./example.ts?mode=server&my-example=0.ts";
export default entry_1("26ecc3a5-0-example", root_1);",
      "map": {
        "file": undefined,
        "mappings": "",
        "names": [],
        "sourceRoot": undefined,
        "sources": [],
        "sourcesContent": [],
        "version": 3,
      },
    },
  },
  "map": {
    "file": undefined,
    "mappings": ";AACM,MAAMA,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,KAAK,GAAG,SAAS;EACvB,eAAeC,OAAOA,CAAA;IAAA,OAAAC,MAAA,EAAAC,QAAA,UAAAC,QAAA,4DAAAC,OAAA,QADhBL,KAAK;IAAA,IAAAE,MAAA;MAAA,OAAAC,QAAA;IAAA;EAAA;AAKb,CAAC",
    "names": [
      "outer",
      "value",
      "example",
      "type_1",
      "result_1",
      "$$func_1",
      "default",
    ],
    "sourceRoot": undefined,
    "sources": [
      "/path/to/example.ts",
    ],
    "sourcesContent": [
      "
      const outer = () => {
        const value = 'foo bar';
        async function example() {
          'use server';
          return value;
        }
      }
      ",
    ],
    "version": 3,
  },
  "roots": [
    "/path/to/example.ts?mode=server&my-example=0.ts",
  ],
}
`;
